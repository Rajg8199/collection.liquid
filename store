<!-- sections/custom-collection.liquid -->
{% schema %}
  {
    "name": "Custom Collection",
    "settings": [],
    "presets": [
      {
        "name": "Custom Collection"
      }
    ]
  }
{% endschema %}

<div class="collection-container">
  <div class="collection-header">
    <h1>{{ collection.title }}</h1>
    <p>{{ collection.description }}</p>
    
    <!-- Filter Dropdown -->
    <select id="sort-products" onchange="sortProducts()">
      <option value="price-asc">Sort by Price: Low to High</option>
      <option value="price-desc">Sort by Price: High to Low</option>
    </select>
  </div>
  
  <div class="collection-products">
    {% for product in collection.products %}
      <div class="product-card" data-price="{{ product.price | divided_by: 100.0 }}">
        <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
        <h2>{{ product.title }}</h2>
        <p>{{ product.price | money }}</p>
        <form method="post" action="/cart/add">
          <input type="hidden" name="id" value="{{ product.variants.first.id }}">
          <button type="submit">Add to Cart</button>
        </form>
      </div>
    {% endfor %}
  </div>
</div>

<script>
  function sortProducts() {
    var sortOption = document.getElementById('sort-products').value;
    var productsContainer = document.querySelector('.collection-products');
    var products = Array.from(productsContainer.querySelectorAll('.product-card'));

    if (sortOption === 'price-asc') {
      products.sort((a, b) => parseFloat(a.dataset.price) - parseFloat(b.dataset.price));
    } else if (sortOption === 'price-desc') {
      products.sort((a, b) => parseFloat(b.dataset.price) - parseFloat(a.dataset.price));
    }

    productsContainer.innerHTML = '';
    products.forEach(product => productsContainer.appendChild(product));
  }
</script>

<style>
  .collection-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }
  .collection-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .collection-products {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }
  .product-card {
    border: 1px solid #ccc;
    padding: 15px;
    text-align: center;
  }
  .product-card img {
    max-width: 100%;
    height: auto;
  }
  .product-card h2 {
    font-size: 2.5em;
    margin: 10px 0;
  }
  .product-card p {
    font-size: 1.2em;
    color: #333;
  }
  .product-card form {
    margin-top: 10px;
  }
 
</style>
